<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="NavDraggable.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        1N8iyYvpy0MAAAAASUVORK5CYII=
</value>
  </data>
</root>